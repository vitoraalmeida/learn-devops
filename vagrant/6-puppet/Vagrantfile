$script_mysql = <<-SCRIPT
  apt-get update && \
  apt-get install -y mysql-server-5.7 && \
  mysql -e "create user 'phpuser'@'%' identified by 'pass';"
SCRIPT

$script_ansible = <<-SCRIPT
  apt-get update && \
  apt-get install -y software-properties-common && \
  apt-add-repository --yes --update ppa:ansible/ansible && \
  apt-get install -y ansible
SCRIPT

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"

  config.vm.define "mysqldb" do |mysql|
    #mysql.vm.network "forwarded_port", guest: 80, host: 8088
  
    #define rede privada (só o host pode acessar) com ip estático
    #mysql.vm.network "private_network", ip: "192.168.50.4"

    #dhcp serve para determinar ips para maquinas automaticamente
    #mysql.vm.network "private_network", type: "dhcp"
    
    #rede publica (bridge). Se o ip não for definido, o será pelo dhcp do host
    mysql.vm.network "public_network", ip: "192.168.15.24"
   
    #desabilita a sincronização da pasta onde está o Vagrantfile, que é feita
    #automaticamente
    mysql.vm.synced_folder ".", "/vagrant", disabled: true
    
    #cria uma pasta configs no guest e sincroniza com a pasta ./configs do host
    mysql.vm.synced_folder "./configs", "/configs"

    #define o provisionamento pelo shell do guest
    mysql.vm.provision "shell",
      inline: "cat /configs/id_bionic.pub >> .ssh/authorized_keys"

    mysql.vm.provision "shell", inline: $script_mysql
    mysql.vm.provision "shell",
      inline: "cat /configs/mysqld.cnf > /etc/mysql/mysql.conf.d/mysqld.cnf"
    mysql.vm.provision "shell", 
      inline: "service mysql restart"   
  end

  config.vm.define "phpweb" do |phpweb|
    phpweb.vm.network "forwarded_port", guest: 8888, host: 8888
    phpweb.vm.network "public_network", ip: "192.168.15.25"


    phpweb.vm.provision "shell",
            inline: "apt-get update && apt-get install -y puppet"

    phpweb.vm.provision "puppet" do |puppet|
        puppet.manifests_path = "./configs/manifests"
        puppet.manifest_file = "phpweb.pp"
    end
  end
end
